<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于前端的一些想法</title>
      <link href="/posts/73626faf.html"/>
      <url>/posts/73626faf.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动生成的第一篇博客</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"heyvsheng","short_name":"heyvsheng","theme_color":"#B041FF","background_color":"#B041FF","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe {    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/info-card.css"/>
      <url>/css/info-card.css</url>
      
        <content type="html"><![CDATA[/* 增强个人信息卡片文字可读性 */#aside-content .card-info {    position: relative;}#aside-content .card-info::before {    content: '';    position: absolute;    top: 0;    left: 0;    right: 0;    bottom: 0;    background: rgba(0, 0, 0, 0.3);    backdrop-filter: blur(1px);    border-radius: 12px;    z-index: 0;}#aside-content .card-info>* {    position: relative;    z-index: 1;}#aside-content .card-info .author-info-name {    color: #fff;    font-weight: bold;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info .author-info-description {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info .site-data .headline,#aside-content .card-info .site-data .length-num {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info #card-info-btn {    color: #fff;    background-color: rgba(0, 0, 0, 0.5);    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);    backdrop-filter: blur(8px);    border: 1px solid rgba(255, 255, 255, 0.2);    transition: all 0.3s ease;}#aside-content .card-info #card-info-btn:hover {    background-color: rgba(0, 0, 0, 0.7);    border-color: rgba(255, 255, 255, 0.3);    transform: translateY(-2px);}#aside-content .card-info .card-info-social-icons .social-icon {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);    transition: all 0.3s ease;}#aside-content .card-info .card-info-social-icons .social-icon:hover {    color: #fff;    transform: scale(1.2);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 引入个人信息卡片样式 */@import url('info-card.css');/* 引入加载页面样式 */@import url('loading.css');/* 页脚与头图透明 */#footer {    background: rgba(255, 255, 255, 0.1) !important;    backdrop-filter: blur(10px) saturate(150%);    -webkit-backdrop-filter: blur(10px) saturate(150%);    /* Safari 支持 */    border: 1px solid rgba(255, 255, 255, 0.1);    /* 细微边框增强效果 */}#page-header {    background: rgba(255, 255, 255, 0.08) !important;    backdrop-filter: blur(15px) saturate(180%);    -webkit-backdrop-filter: blur(15px) saturate(180%);    border-bottom: 1px solid rgba(255, 255, 255, 0.1);}/* 夜间模式调整 */[data-theme="dark"] #footer {    background: rgba(0, 0, 0, 0.25) !important;    border: 1px solid rgba(255, 255, 255, 0.05);}[data-theme="dark"] #page-header {    background: rgba(0, 0, 0, 0.2) !important;    border-bottom: 1px solid rgba(255, 255, 255, 0.05);}/* 遮罩透明 */#footer::before,#page-header::before,[data-theme="dark"] #footer::before,[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 一级菜单居中 */#nav .menus_items {    position: absolute !important;    width: fit-content !important;    left: 50% !important;    transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 ，取决于实际的菜单*/.menus_items .menus_item:nth-child(5) .menus_item_child {    left: -38px;}/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {    animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {    animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {    animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {    animation: light_5px 10s linear infinite;}/* 关键帧描述 *//*黑夜霓虹灯*/@keyframes light_15px {    0% {        text-shadow: #5636ed 0 0 15px;    }    12.5% {        text-shadow: #11ee5e 0 0 15px;    }    25% {        text-shadow: #f14747 0 0 15px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 15px;    }    50% {        text-shadow: #b347f1 0 0 15px;    }    62.5% {        text-shadow: #002afa 0 0 15px;    }    75% {        text-shadow: #ed709b 0 0 15px;    }    87.5% {        text-shadow: #39c5bb 0 0 15px;    }    100% {        text-shadow: #5636ed 0 0 15px;    }}@keyframes light_10px {    0% {        text-shadow: #5636ed 0 0 10px;    }    12.5% {        text-shadow: #11ee5e 0 0 10px;    }    25% {        text-shadow: #f14747 0 0 10px;    }    37.5% {        text-shadow: #f1a247 0 0 10px;    }    50% {        text-shadow: #f1ee47 0 0 10px;    }    50% {        text-shadow: #b347f1 0 0 10px;    }    62.5% {        text-shadow: #002afa 0 0 10px;    }    75% {        text-shadow: #ed709b 0 0 10px;    }    87.5% {        text-shadow: #39c5bb 0 0 10px;    }    100% {        text-shadow: #5636ed 0 0 10px;    }}@keyframes light_5px {    0% {        text-shadow: #5636ed 0 0 5px;    }    12.5% {        text-shadow: #11ee5e 0 0 5px;    }    25% {        text-shadow: #f14747 0 0 5px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 5px;    }    50% {        text-shadow: #b347f1 0 0 5px;    }    62.5% {        text-shadow: #002afa 0 0 5px;    }    75% {        text-shadow: #ed709b 0 0 5px;    }    87.5% {        text-shadow: #39c5bb 0 0 5px;    }    100% {        text-shadow: #5636ed 0 0 5px;    }}/*个人卡片渐变*//* 侧边栏个人信息卡片动态渐变色 */#aside-content>.card-widget.card-info {    background: url('/img/avabg/bg1.jpg') center/cover no-repeat;    box-shadow: 0 6px 20px rgba(164, 69, 255, 0.22), 0 0 14px rgba(236, 72, 153, 0.18);    position: relative;    overflow: hidden;}@-webkit-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@-moz-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content>.card-widget.card-info {    background: url('/img/avabg/bg3.jpg') center/cover no-repeat;    box-shadow: 0 6px 22px rgba(155, 93, 229, 0.25), 0 0 14px rgba(236, 72, 153, 0.2);    filter: brightness(0.8) contrast(1.1);}/* * 主题：星空（偏夜空紫，带一点蓝的清冷霓虹） * 使用方式：在 <body> 上添加类名 theme-starry * 作用范围：仅覆盖侧边栏个人信息卡片的背景与投影 */body.theme-starry #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #1b1236,            #3a1f6e,            #5624b8,            #6d28d9,            #2b6cb0);    box-shadow: 0 8px 26px rgba(109, 40, 217, 0.28), 0 0 18px rgba(59, 130, 246, 0.22);}/* 暗色模式下的星空主题卡片样式（与上面同风格、亮度稍降） */[data-theme="dark"] body.theme-starry #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #100a22,            #2a1754,            #4c1d95,            #6d28d9);    box-shadow: 0 10px 30px rgba(109, 40, 217, 0.35), 0 0 20px rgba(59, 130, 246, 0.25);}/* * 主题：伟大（高对比、仪式感，紫金微辉） * 使用方式：在 <body> 上添加类名 theme-epic */body.theme-epic #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #2a0e61,            #6a1b9a,            #8b5cf6,            #c084fc);    box-shadow: 0 10px 28px rgba(139, 92, 246, 0.26), 0 0 18px rgba(234, 179, 8, 0.18);    border: 1px solid rgba(234, 179, 8, 0.25);}/* 暗色模式下的“伟大”主题卡片样式 */[data-theme="dark"] body.theme-epic #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #1d0a46,            #4c1480,            #7c3aed,            #a78bfa);    box-shadow: 0 12px 32px rgba(124, 58, 237, 0.3), 0 0 22px rgba(234, 179, 8, 0.22);}/* * 主题：紫色（都市轻霓虹，通用耐看） * 使用方式：在 <body> 上添加类名 theme-purple */body.theme-purple #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #ad8bff,            #c3a7ff,            #e2b6ff,            #f1d0ff);    box-shadow: 0 8px 24px rgba(164, 69, 255, 0.22), 0 0 16px rgba(236, 72, 153, 0.18);}/* 暗色模式下的“紫色”主题卡片样式 */[data-theme="dark"] body.theme-purple #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #4f2bb5,            #6a3ee0,            #8b5cf6,            #a78bfa);    box-shadow: 0 10px 26px rgba(139, 92, 246, 0.26), 0 0 18px rgba(236, 72, 153, 0.2);}/* * 右下角设置与返回顶部图标：星空蓝悬停效果 * 目标元素：#rightside 区域内的“设置按钮”和“返回顶部” * 效果：图标变为星空蓝并带霓虹辉光，背景/边框轻微高亮 */#rightside #rightside-config:hover i,#rightside #go-up:hover i {    color: #60a5fa;    /* 星光蓝 */    text-shadow: 0 0 8px rgba(96, 165, 250, 0.9), 0 0 16px rgba(59, 130, 246, 0.6);}#rightside #rightside-config:hover,#rightside #go-up:hover {    background: rgba(59, 130, 246, 0.12);    border-color: rgba(59, 130, 246, 0.35);}[data-theme="dark"] #rightside #rightside-config:hover i,[data-theme="dark"] #rightside #go-up:hover i {    color: #93c5fd;    /* 暗色模式稍亮的星空蓝 */    text-shadow: 0 0 10px rgba(147, 197, 253, 0.95), 0 0 18px rgba(59, 130, 246, 0.7);}[data-theme="dark"] #rightside #rightside-config:hover,[data-theme="dark"] #rightside #go-up:hover {    background: rgba(37, 99, 235, 0.16);    border-color: rgba(59, 130, 246, 0.45);}/* * 右下角设置面板：夜间模式、繁简转换、单/双栏切换 悬停为荧光绿 * 目标元素：#darkmode、#translateLink、#hide-aside-btn * 效果：图标/文字荧光绿色，伴随霓虹辉光；按钮背景/边框轻微高亮 */#rightside #rightside-config-hide #darkmode:hover i,#rightside #rightside-config-hide #hide-aside-btn:hover i {    color: #39ff14;    /* 荧光绿 */    text-shadow: 0 0 10px rgba(57, 255, 20, 0.95), 0 0 18px rgba(57, 255, 20, 0.6);}#rightside #rightside-config-hide #translateLink:hover {    color: #39ff14;    text-shadow: 0 0 10px rgba(57, 255, 20, 0.95), 0 0 18px rgba(57, 255, 20, 0.6);}#rightside #rightside-config-hide #darkmode:hover,#rightside #rightside-config-hide #translateLink:hover,#rightside #rightside-config-hide #hide-aside-btn:hover {    background: rgba(57, 255, 20, 0.12);    border-color: rgba(57, 255, 20, 0.35);}[data-theme="dark"] #rightside #rightside-config-hide #darkmode:hover i,[data-theme="dark"] #rightside #rightside-config-hide #hide-aside-btn:hover i {    color: #72ff4d;    /* 暗色模式稍亮 */    text-shadow: 0 0 12px rgba(114, 255, 77, 0.95), 0 0 20px rgba(57, 255, 20, 0.7);}[data-theme="dark"] #rightside #rightside-config-hide #translateLink:hover {    color: #72ff4d;    text-shadow: 0 0 12px rgba(114, 255, 77, 0.95), 0 0 20px rgba(57, 255, 20, 0.7);}[data-theme="dark"] #rightside #rightside-config-hide #darkmode:hover,[data-theme="dark"] #rightside #rightside-config-hide #translateLink:hover,[data-theme="dark"] #rightside #rightside-config-hide #hide-aside-btn:hover {    background: rgba(22, 163, 74, 0.18);    border-color: rgba(57, 255, 20, 0.45);}/* * 顶部提示条（Snackbar）：固定顶部居中显示，并按明暗模式切换配色 * 明亮模式：炫酷紫色渐变 + 柔和辉光 * 暗黑模式：星空蓝渐变 + 荧光辉光 */.snackbar-container.snackbar-css {    top: 10px !important;    bottom: auto !important;}/* 白天（light）：炫酷紫色并带辉光 */html[data-theme="light"] .snackbar-container.snackbar-css {    background: linear-gradient(135deg, #ad8bff, #caa1ff) !important;    box-shadow: 0 8px 24px rgba(164, 69, 255, 0.28), 0 0 16px rgba(236, 72, 153, 0.22) !important;}/* 夜间（dark）：星空蓝并带荧光辉光 */html[data-theme="dark"] .snackbar-container.snackbar-css {    background: linear-gradient(135deg, #0b1533, #1b2a4a, #2a4b8d) !important;    box-shadow: 0 10px 28px rgba(59, 130, 246, 0.28), 0 0 18px rgba(147, 197, 253, 0.22) !important;}.snackbar-container.snackbar-css .action,.snackbar-container.snackbar-css .snackbar-content {    color: #ffffff !important;}/* 滚动条紫色主题 */::-webkit-scrollbar {    width: 8px;    height: 8px;}::-webkit-scrollbar-track {    background: rgba(173, 139, 255, 0.1);    border-radius: 4px;}::-webkit-scrollbar-thumb {    background: linear-gradient(135deg, #ad8bff, #caa1ff);    border-radius: 4px;    box-shadow: 0 0 6px rgba(164, 69, 255, 0.3);}::-webkit-scrollbar-thumb:hover {    background: linear-gradient(135deg, #9b5de5, #b36af0);    box-shadow: 0 0 8px rgba(164, 69, 255, 0.5);}/* 暗色模式滚动条 */[data-theme="dark"] ::-webkit-scrollbar-track {    background: rgba(59, 130, 246, 0.1);}[data-theme="dark"] ::-webkit-scrollbar-thumb {    background: linear-gradient(135deg, #6a3ee0, #8b5cf6);    box-shadow: 0 0 6px rgba(109, 40, 217, 0.4);}[data-theme="dark"] ::-webkit-scrollbar-thumb:hover {    background: linear-gradient(135deg, #7c3aed, #a78bfa);    box-shadow: 0 0 8px rgba(109, 40, 217, 0.6);}/* 个人信息Follow me按钮 */#aside-content>.card-widget.card-info>#card-info-btn {    border-radius: 8px;}/* 网站背景设置 - 根据主题切换不同的背景图片 *//* 夜间模式背景设置为ku.jpg */html[data-theme="dark"] {    background-image: url('/img/ku.jpg') !important;    background-repeat: no-repeat !important;    background-attachment: fixed !important;    background-size: cover !important;    background-position: center !important;    background-color: transparent !important;}/* 白天模式背景设置为beautiful.jpg */html[data-theme="light"] {    background-image: url('/img/beautiful.jpg') !important;    background-repeat: no-repeat !important;    background-attachment: fixed !important;    background-size: cover !important;    background-position: center !important;    background-color: transparent !important;}/* 增强优先级，确保背景图始终显示 */body {    background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/loading.css"/>
      <url>/css/loading.css</url>
      
        <content type="html"><![CDATA[/* 自定义加载页面样式 */#loading-box {    background: linear-gradient(135deg, rgba(102, 126, 234, 0.8) 0%, rgba(118, 75, 162, 0.8) 25%, rgba(168, 168, 255, 0.8) 50%, rgba(139, 92, 246, 0.8) 75%, rgba(109, 40, 217, 0.8) 100%);}#loading-box .image-loader .avatar {    width: 180px;    height: 180px;    background-size: cover;    background-position: center;    box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    animation: pulse 2s ease-in-out infinite;}#loading-box .image-loader .overlay {    background: rgba(59, 130, 246, 0.1);    filter: blur(12px);}#loading-box .image-loader .loading-text {    color: #ffffff;    text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);    font-size: 16px;    font-weight: bold;}/* 自定义脉冲动画 */@keyframes pulse {    0% {        transform: scale(1);        box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    }    50% {        transform: scale(1.05);        box-shadow: 0 12px 50px rgba(109, 40, 217, 0.4), 0 0 30px rgba(59, 130, 246, 0.4);    }    100% {        transform: scale(1);        box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) { }    return "";};class Cursor {    constructor() {        this.pos = { curr: null, prev: null };        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='.5'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = { curr: null, prev: null };        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove = e => { (this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = { x: e.clientX - 8, y: e.clientY - 8 }; this.cursor.classList.remove("hidden"); };        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown = e => this.cursor.classList.add("active");        document.onmouseup = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/loading.js"/>
      <url>/js/loading.js</url>
      
        <content type="html"><![CDATA[/** * 加载动画气泡特效 */// 等待DOM加载完成document.addEventListener('DOMContentLoaded', function() {  // 获取加载框元素  const loadingBox = document.getElementById('loading-box');    // 如果加载框存在，则创建气泡容器  if (loadingBox) {    // 检查是否已存在气泡容器    let bubblesContainer = document.querySelector('.bubbles-container');        // 如果气泡容器不存在，则创建一个    if (!bubblesContainer) {      bubblesContainer = document.createElement('div');      bubblesContainer.classList.add('bubbles-container');      loadingBox.appendChild(bubblesContainer);    }        // 初始化气泡生成    initBubbles(bubblesContainer);  }});/** * 初始化气泡生成 * @param {HTMLElement} container 气泡容器元素 */function initBubbles(container) {  // 气泡大小类型  const bubbleSizes = ['small', 'medium', 'large'];  // 要生成的气泡数量  const bubbleCount = 20;    // 生成初始气泡  for (let i = 0; i < bubbleCount; i++) {    createBubble(container, bubbleSizes);  }    // 每隔一段时间生成新的气泡  setInterval(() => {    createBubble(container, bubbleSizes);  }, 500);}/** * 创建一个气泡 * @param {HTMLElement} container 气泡容器元素 * @param {Array} sizes 气泡大小类型数组 */function createBubble(container, sizes) {  // 创建气泡元素  const bubble = document.createElement('div');  bubble.classList.add('bubble');    // 随机选择气泡大小  const size = sizes[Math.floor(Math.random() * sizes.length)];  bubble.classList.add(size);    // 随机设置气泡的水平位置  const leftPos = Math.random() * 100;  bubble.style.left = `${leftPos}%`;    // 随机设置气泡的透明度  const opacity = 0.2 + Math.random() * 0.5;  bubble.style.background = `rgba(255, 255, 255, ${opacity})`;    // 随机设置气泡的动画持续时间（小气泡快，大气泡慢）  let duration;  switch (size) {    case 'small':      duration = 5 + Math.random() * 5;      break;    case 'medium':      duration = 8 + Math.random() * 7;      break;    case 'large':      duration = 12 + Math.random() * 10;      break;  }  bubble.style.animationDuration = `${duration}s`;    // 随机设置动画延迟  const delay = Math.random() * 5;  bubble.style.animationDelay = `${delay}s`;    // 添加气泡到容器  container.appendChild(bubble);    // 当气泡动画结束后，移除气泡元素  bubble.addEventListener('animationend', function() {    if (container.contains(bubble)) {      container.removeChild(bubble);    }  });}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() { window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame; var n, e, i, h, t = .05, s = document.getElementById("universe"), o = !0, a = "180,184,240", r = "226,225,142", d = "226,225,224", c = []; function f() { n = window.innerWidth, e = window.innerHeight, i = .216 * n, s.setAttribute("width", n), s.setAttribute("height", e) } function u() { h.clearRect(0, 0, n, e); for (var t = c.length, i = 0; i < t; i++) { var s = c[i]; s.move(), s.fadeIn(), s.fadeOut(), s.draw() } } function y() { this.reset = function () { this.giant = m(3), this.comet = !this.giant && !o && m(10), this.x = l(0, n - 10), this.y = l(0, e), this.r = l(1.1, 2.6), this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t, this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120), this.fadingOut = null, this.fadingIn = !0, this.opacity = 0, this.opacityTresh = l(.2, 1 - .4 * (this.comet + 1 - 1)), this.do = l(5e-4, .002) + .001 * (this.comet + 1 - 1) }, this.fadeIn = function () { this.fadingIn && (this.fadingIn = !(this.opacity > this.opacityTresh), this.opacity += this.do) }, this.fadeOut = function () { this.fadingOut && (this.fadingOut = !(this.opacity < 0), this.opacity -= this.do / 2, (this.x > n || this.y < 0) && (this.fadingOut = !1, this.reset())) }, this.draw = function () { if (h.beginPath(), this.giant) h.fillStyle = "rgba(" + a + "," + this.opacity + ")", h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1); else if (this.comet) { h.fillStyle = "rgba(" + d + "," + this.opacity + ")", h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1); for (var t = 0; t < 30; t++)h.fillStyle = "rgba(" + d + "," + (this.opacity - this.opacity / 20 * t) + ")", h.rect(this.x - this.dx / 4 * t, this.y - this.dy / 4 * t - 2, 2, 2), h.fill() } else h.fillStyle = "rgba(" + r + "," + this.opacity + ")", h.rect(this.x, this.y, this.r, this.r); h.closePath(), h.fill() }, this.move = function () { this.x += this.dx, this.y += this.dy, !1 === this.fadingOut && this.reset(), (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0) }, setTimeout(function () { o = !1 }, 50) } function m(t) { return Math.floor(1e3 * Math.random()) + 1 < 10 * t } function l(t, i) { return Math.random() * (i - t) + t } f(), window.addEventListener("resize", f, !1), function () { h = s.getContext("2d"); for (var t = 0; t < i; t++)c[t] = new y, c[t].reset(); u() }(), function t() { document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark' && u(), window.requestAnimationFrame(t) }() };dark()]]></content>
      
    </entry>
    
    
  
</search>
