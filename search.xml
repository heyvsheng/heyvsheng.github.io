<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Css复习</title>
      <link href="/posts/6f6e644d.html"/>
      <url>/posts/6f6e644d.html</url>
      
        <content type="html"><![CDATA[<p>这里再次复习一下</p><h3 id=""><a href="#" class="headerlink" title="&lt;header&gt;"></a><code>&lt;header&gt;</code></h3><p>专门设置页眉的，头部，可以用作导航</p><h3 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h3><p>三维坐标系理解：</p><ul><li><strong>x轴</strong>：水平方向（左右）</li><li><strong>y轴</strong>：垂直方向（上下）</li><li><strong>z轴</strong>：垂直于屏幕的方向（前后）</li></ul><p>其实说白了，就是控制优先级，这么理解，优先级越高，就在最上面，也可以叫：堆叠上下文</p><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">z-index</span>: auto | number | inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>取值说明</strong>：</p><ul><li><code>auto</code>：默认值，堆叠顺序与父元素相同</li><li><code>number</code>：整数（正数、负数、0）</li><li><code>inherit</code>：继承父元素的 z-index</li></ul><p><strong>z-index 生效的前提条件</strong></p><p><strong>重要</strong>：<code>z-index</code> 只对以下定位元素生效：</p><ul><li><code>position: relative</code></li><li><code>position: absolute</code></li><li><code>position: fixed</code></li><li><code>position: sticky</code></li></ul><h3 id="box-shadow"><a href="#box-shadow" class="headerlink" title="box-shadow"></a>box-shadow</h3><p>让元素有立体感</p><p><strong>基础语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-offset v-offset blur spread color inset;</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong>（按顺序）：</p><ul><li><code>h-offset</code>：水平阴影位置（必需）</li><li><code>v-offset</code>：垂直阴影位置（必需）</li><li><code>blur</code>：模糊半径（可选）</li><li><code>spread</code>：阴影尺寸扩展（可选）</li><li><code>color</code>：阴影颜色（可选）</li><li><code>inset</code>：内阴影（可选）</li></ul><p><strong>参数详解</strong></p><p>多重阴影</p><p><code>box-shadow</code> 支持用逗号分隔多个阴影：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.multiple-shadows</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: </span><br><span class="line">    <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>),    <span class="comment">/* 底部细阴影 */</span></span><br><span class="line">    <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>),   <span class="comment">/* 中等阴影 */</span></span><br><span class="line">    <span class="number">0</span> <span class="number">16px</span> <span class="number">32px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.15</span>); <span class="comment">/* 大范围阴影 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.glow-effect</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: </span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#ff0080</span>,</span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">#ff0080</span>,</span><br><span class="line">    <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span> <span class="number">#ff0080</span>;</span><br><span class="line">  <span class="comment">/* 霓虹灯发光效果 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关于flex布局"><a href="#关于flex布局" class="headerlink" title="关于flex布局"></a>关于flex布局</h3><p>直接看课，助于理解：</p><p>【flex弹性布局 动画详解系列 css科普教程-哔哩哔哩】 <a href="https://b23.tv/l69lfp2">https://b23.tv/l69lfp2</a></p><h3 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h3><p>是 CSS 中用于<strong>控制属性变化过程</strong>的属性，它让元素从一个状态平滑地过渡到另一个状态，而不是瞬间改变。</p><p><strong>完整语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: property duration timing-function delay;</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong>（按顺序）：</p><ul><li><code>property</code>：要应用过渡的 CSS 属性名称</li><li><code>duration</code>：过渡持续时间</li><li><code>timing-function</code>：过渡的速度曲线（缓动函数）</li><li><code>delay</code>：过渡开始前的延迟时间</li></ul><p><strong>参数详解</strong></p><ol><li>单个属性过渡</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.3s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 当 opacity 变化时，会在 0.3 秒内以 ease-in-out 的速度曲线完成过渡 */</span></span><br></pre></td></tr></table></figure><ol start="2"><li>完整参数示例</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">0.5s</span> ease-in <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 当 width 变化时，等待 0.2 秒后开始，在 0.5 秒内以 ease-in 的速度曲线完成过渡 */</span></span><br></pre></td></tr></table></figure><p><strong>缓动函数效果对比</strong>：</p><ul><li><code>linear</code>：匀速运动</li><li><code>ease</code>：慢→快→慢（默认）</li><li><code>ease-in</code>：慢开始</li><li><code>ease-out</code>：慢结束</li><li><code>ease-in-out</code>：慢开始和结束</li><li><code>cubic-bezier()</code>：自定义速度曲线</li></ul><p><strong>可过渡的属性</strong></p><p>不是所有 CSS 属性都可以过渡，常见的可过渡属性包括：</p><ul><li><strong>颜色相关</strong>：<code>color</code>, <code>background-color</code>, <code>border-color</code></li><li><strong>尺寸相关</strong>：<code>width</code>, <code>height</code>, <code>padding</code>, <code>margin</code></li><li><strong>位置相关</strong>：<code>top</code>, <code>left</code>, <code>right</code>, <code>bottom</code></li><li><strong>变换相关</strong>：<code>transform</code></li><li><strong>显示相关</strong>：<code>opacity</code>, <code>visibility</code></li><li><strong>字体相关</strong>：<code>font-size</code>, <code>line-height</code></li></ul><h3 id="outline"><a href="#outline" class="headerlink" title="outline"></a>outline</h3><p>是在元素边框（border）<strong>外部</strong>绘制的线条，用于突出显示元素，<strong>不占用布局空间</strong>（与 border 不同）。</p><p><strong>完整语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">outline</span>: width style color;</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong>（按顺序）：</p><ul><li><code>width</code>：轮廓线的宽度</li><li><code>style</code>：轮廓线的样式</li><li><code>color</code>：轮廓线的颜色</li></ul><p><strong>outline 与 border 的关键区别</strong></p><table><thead><tr><th align="left">特性</th><th align="left">outline</th><th align="left">border</th></tr></thead><tbody><tr><td align="left"><strong>布局影响</strong></td><td align="left">❌ 不占用空间</td><td align="left">✅ 占用空间</td></tr><tr><td align="left"><strong>位置</strong></td><td align="left">在 border 外面</td><td align="left">在 padding 和 margin 之间</td></tr><tr><td align="left"><strong>圆角</strong></td><td align="left">❌ 不跟随 border-radius</td><td align="left">✅ 跟随 border-radius</td></tr><tr><td align="left"><strong>各边设置</strong></td><td align="left">❌ 不能分别设置各边</td><td align="left">✅ 可以分别设置各边</td></tr></tbody></table><p><strong>大多数浏览器对焦点元素使用类似这样的样式：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">1px</span> dotted <span class="number">#000</span>;</span><br><span class="line">  <span class="comment">/* 或 */</span></span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">5px</span> auto -webkit-focus-ring-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="padding，border和margin"><a href="#padding，border和margin" class="headerlink" title="padding，border和margin"></a>padding，border和margin</h3><p>我在B站搜索了，出现了Box Model 盒子模型</p><p><strong>盒模型概念</strong></p><p>在 CSS 中，每个元素都被看作一个矩形盒子，由内到外包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ 内容(content) ] ← [ 内边距(padding) ] ← [ 边框(border) ] ← [ 外边距(margin) ]</span><br></pre></td></tr></table></figure><p><img src="D:\ProgramDataDDDD\xwechat_files\wxid_0jbghmpy6cgw22_7337\temp\RWTemp\2025-10\90b36115de368885e134282fc6ed617e.jpg" alt="90b36115de368885e134282fc6ed617e"></p><p>padding和margin都是包含上下左右四边的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 简写形式 */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;                 <span class="comment">/* 四个方向都是10px */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;            <span class="comment">/* 上下10px 左右20px */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;       <span class="comment">/* 上10px 左右20px 下30px */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;  <span class="comment">/* 上10px 右20px 下30px 左40px */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 简写形式 */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span>;                 <span class="comment">/* 四个方向都是10px */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">20px</span>;            <span class="comment">/* 上下10px 左右20px */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;       <span class="comment">/* 上10px 左右20px 下30px */</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;  <span class="comment">/* 上10px 右20px 下30px 左40px */</span></span><br></pre></td></tr></table></figure><p><strong>一些注意情况</strong></p><ul><li>如果是一个button，那么padding就是可点击范围，margin则不是</li><li>当两个元素垂直方向上，margin-bottom遇上margin-top，会出现边距重叠的现象</li></ul><h4 id="Border（边框）"><a href="#Border（边框）" class="headerlink" title="Border（边框）"></a>Border（边框）</h4><p><strong>定义</strong></p><p>围绕在内边距和外边距之间的<strong>边界线</strong>。</p><p><strong>语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 简写形式 */</span></span><br><span class="line"><span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 分别设置 */</span></span><br><span class="line"><span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line"><span class="attribute">border-style</span>: solid;</span><br><span class="line"><span class="attribute">border-color</span>: red;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 单独设置各边 */</span></span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid blue;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">2px</span> dashed green;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">3px</span> dotted purple;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">1px</span> solid orange;</span><br></pre></td></tr></table></figure><p><strong>边框样式（border-style）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.solid</span> &#123; <span class="attribute">border-style</span>: solid; &#125;    <span class="comment">/* 实线 */</span></span><br><span class="line"><span class="selector-class">.dashed</span> &#123; <span class="attribute">border-style</span>: dashed; &#125;  <span class="comment">/* 虚线 */</span></span><br><span class="line"><span class="selector-class">.dotted</span> &#123; <span class="attribute">border-style</span>: dotted; &#125;  <span class="comment">/* 点线 */</span></span><br><span class="line"><span class="selector-class">.double</span> &#123; <span class="attribute">border-style</span>: double; &#125;  <span class="comment">/* 双线 */</span></span><br><span class="line"><span class="selector-class">.groove</span> &#123; <span class="attribute">border-style</span>: groove; &#125;  <span class="comment">/* 3D凹槽 */</span></span><br><span class="line"><span class="selector-class">.ridge</span> &#123; <span class="attribute">border-style</span>: ridge; &#125;    <span class="comment">/* 3D凸槽 */</span></span><br><span class="line"><span class="selector-class">.inset</span> &#123; <span class="attribute">border-style</span>: inset; &#125;    <span class="comment">/* 3D内嵌 */</span></span><br><span class="line"><span class="selector-class">.outset</span> &#123; <span class="attribute">border-style</span>: outset; &#125;  <span class="comment">/* 3D外凸 */</span></span><br><span class="line"><span class="selector-class">.none</span> &#123; <span class="attribute">border-style</span>: none; &#125;      <span class="comment">/* 无边框 */</span></span><br></pre></td></tr></table></figure><p><strong>特点</strong></p><ul><li>✅ <strong>在padding和margin之间</strong></li><li>✅ <strong>受背景颜色影响</strong></li><li>✅ <strong>可分别设置各边样式</strong></li><li>❌ <strong>不能为负值</strong></li></ul><p><strong>三者对比表格</strong></p><table><thead><tr><th align="left">特性</th><th align="left">Padding</th><th align="left">Border</th><th align="left">Margin</th></tr></thead><tbody><tr><td align="left"><strong>位置</strong></td><td align="left">内容与边框之间</td><td align="left">围绕元素</td><td align="left">边框外部</td></tr><tr><td align="left"><strong>背景</strong></td><td align="left">✅ 受影响</td><td align="left">✅ 受影响</td><td align="left">❌ 不受影响</td></tr><tr><td align="left"><strong>颜色</strong></td><td align="left">继承背景色</td><td align="left">单独设置</td><td align="left">透明</td></tr><tr><td align="left"><strong>数值</strong></td><td align="left">只能 ≥ 0</td><td align="left">只能 ≥ 0</td><td align="left">可正可负</td></tr><tr><td align="left"><strong>点击区域</strong></td><td align="left">✅ 包含</td><td align="left">✅ 包含</td><td align="left">❌ 不包含</td></tr></tbody></table><h4 id="盒模型计算"><a href="#盒模型计算" class="headerlink" title="盒模型计算"></a>盒模型计算</h4><p><strong>标准盒模型（content-box）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">5px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实际宽度</strong> &#x3D; 200px + 20px×2 + 5px×2 &#x3D; 250px</p><h3 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h3><p>规定了当<strong>元素的内容</strong>超出其<strong>指定的区域</strong>时，应该如何处理。</p><p><code>overflow: hidden;</code> 的意思是：<strong>将溢出的内容直接裁剪掉，并且不可见，不提供任何滚动机制。</strong></p><p>为了更好地理解 <code>hidden</code>，我们看一下 <code>overflow</code> 的其他常用值：</p><table><thead><tr><th align="left">属性值</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left"><code>overflow: visible</code></td><td align="left"><strong>默认值</strong>。内容不会被裁剪，会原样呈现在元素框之外。</td></tr><tr><td align="left"><code>overflow: hidden</code></td><td align="left"><strong>裁剪</strong>溢出的内容，不可滚动查看。</td></tr><tr><td align="left"><code>overflow: scroll</code></td><td align="left"><strong>总是显示滚动条</strong>（即使内容没有溢出）。用户可以通过滚动查看被隐藏的内容。</td></tr><tr><td align="left"><code>overflow: auto</code></td><td align="left"><strong>智能</strong>。由浏览器决定，如果内容溢出，则显示滚动条；如果没有溢出，则不显示。这是最常用的值之一。</td></tr></tbody></table><p>你可以使用 <code>overflow-x</code> 和 <code>overflow-y</code> 来分别控制水平和垂直方向的溢出行为（例如 <code>overflow-x: hidden; overflow-y: auto;</code>）。</p><h4 id="触发BCF"><a href="#触发BCF" class="headerlink" title="触发BCF"></a>触发BCF</h4><p><strong>BFC 是什么？</strong><br>你可以把它理解为一个<strong>独立的布局容器</strong>，容器内部的布局不会影响到外部，外部的布局也不会影响到内部。</p><p><strong>触发 BFC 能解决什么问题？</strong></p><ol><li><p><strong>外边距合并</strong><br>在普通流中，相邻两个块级元素的上下外边距会发生合并。但如果其中一个元素被包裹在一个触发了 BFC 的容器内，它们的边距就不会合并。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bfc-container</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden; <span class="comment">/* 触发BFC */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>阻止元素被浮动元素覆盖</strong><br>如果一个元素旁边有一个浮动元素，它可能会被浮动元素覆盖。通过给这个元素设置 <code>overflow: hidden</code> 触发 BFC，它会避开浮动元素，形成环绕效果。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.float-left</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.normal-element</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden; <span class="comment">/* 触发BFC，使其不与浮动元素重叠 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="background-attachment"><a href="#background-attachment" class="headerlink" title="background-attachment"></a>background-attachment</h3><p>是 CSS 中用于控制背景图像滚动行为的属性，它决定了背景图像相对于视口或包含元素的固定方式。</p><p><strong>属性值及效果</strong></p><p>1**. <code>scroll</code>（默认值）**</p><ul><li><strong>效果</strong>：背景图像会随着页面的滚动而滚动</li><li><strong>特点</strong>：<ul><li>背景图像相对于元素本身固定</li><li>当元素内容滚动时，背景图像会一起滚动</li><li>这是最常用的默认行为</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: scroll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. <code>fixed</code></strong></p><ul><li><strong>效果</strong>：背景图像相对于视口固定，不随页面滚动</li><li><strong>特点</strong>：<ul><li>创建视差滚动效果</li><li>背景图像始终停留在屏幕的同一位置</li><li>性能开销较大，特别是在移动设备上</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. <code>local</code></strong></p><ul><li><strong>效果</strong>：背景图像随元素内容的滚动而滚动</li><li><strong>特点</strong>：<ul><li>当元素有滚动条时，背景图像会随内容一起滚动</li><li>适用于可滚动容器内的背景</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scrollable-element</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: local;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实际应用示例</strong></p><p><strong>基本固定背景效果</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hero-section</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;hero-bg.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>可滚动容器中的背景</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scroll-container</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;pattern.png&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: local;</span><br><span class="line">  <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>视差滚动效果</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parallax-section</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;parallax-bg.jpg&quot;</span>);</span><br><span class="line">  <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">  <span class="attribute">background-position</span>: center;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h3><p>是 CSS 中一个非常强大的属性，允许你对元素进行<strong>2D或3D变换</strong>，包括旋转、缩放、倾斜、平移等，而不会影响文档流中的其他元素。</p><p><strong>基本语法</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: none | &lt;transform-function&gt;+;</span><br></pre></td></tr></table></figure><h4 id="2D-变换函数"><a href="#2D-变换函数" class="headerlink" title="2D 变换函数"></a>2D 变换函数</h4><p><strong>1. 平移（Translate）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 水平方向移动 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">50%</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 垂直方向移动 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">20px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">25%</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 同时指定水平和垂直 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">50px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50%</span>, -<span class="number">25%</span>);</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">50px</span>);</span><br><span class="line">  <span class="comment">/* 等同于 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>) <span class="built_in">translateY</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 缩放（Scale）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 等比例缩放 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.5</span>);    <span class="comment">/* 放大1.5倍 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);    <span class="comment">/* 缩小一半 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 分别指定宽高缩放 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>, <span class="number">1</span>);   <span class="comment">/* 宽度2倍，高度不变 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleX</span>(<span class="number">1.5</span>);   <span class="comment">/* 仅缩放宽度 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.8</span>);   <span class="comment">/* 仅缩放高度 */</span></span><br></pre></td></tr></table></figure><p><strong>3. 旋转（Rotate）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 2D旋转 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);     <span class="comment">/* 顺时针旋转45度 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">90deg</span>);    <span class="comment">/* 逆时针旋转90度 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1.57rad</span>);   <span class="comment">/* 使用弧度 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0.25turn</span>);  <span class="comment">/* 使用圈数 */</span></span><br></pre></td></tr></table></figure><p><strong>4. 倾斜（Skew）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 水平倾斜 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">skewX</span>(<span class="number">15deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 垂直倾斜 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">skewY</span>(<span class="number">10deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 同时指定水平和垂直 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">skew</span>(<span class="number">15deg</span>, <span class="number">10deg</span>);</span><br></pre></td></tr></table></figure><p><strong>5. 矩阵变换（Matrix）</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 2D矩阵变换 - 语法: matrix(a, b, c, d, tx, ty) */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">matrix</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">100</span>, <span class="number">50</span>); <span class="comment">/* 等同于 translate(100px, 50px) */</span></span><br></pre></td></tr></table></figure><h4 id="3D-变换函数"><a href="#3D-变换函数" class="headerlink" title="3D 变换函数"></a>3D 变换函数</h4><p><strong>1. 3D平移</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">100px</span>, <span class="number">50px</span>, <span class="number">200px</span>);</span><br></pre></td></tr></table></figure><p><strong>2. 3D旋转</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 绕X轴旋转（前后翻转） */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">45deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 绕Y轴旋转（左右翻转） */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 绕Z轴旋转（等同于rotate） */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">30deg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 绕任意轴旋转 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">45deg</span>);</span><br></pre></td></tr></table></figure><p><strong>3. 3D缩放</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleZ</span>(<span class="number">1.5</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale3d</span>(<span class="number">1.5</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>4. 3D矩阵</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">matrix3d</span>(...); <span class="comment">/* 16个参数的3D矩阵 */</span></span><br></pre></td></tr></table></figure><h4 id="多重变换"><a href="#多重变换" class="headerlink" title="多重变换"></a>多重变换</h4><p>可以组合多个变换函数，<strong>按从右到左的顺序</strong>应用：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="comment">/* 先旋转45度，然后平移100px */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>) <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 先缩放，然后旋转，最后平移 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>, <span class="number">50px</span>) <span class="built_in">rotate</span>(<span class="number">30deg</span>) <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>变换原点（transform-origin）</strong></p><p>控制变换的基准点：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">transform-origin</span>: center center;    <span class="comment">/* 默认值 */</span></span><br><span class="line">  <span class="attribute">transform-origin</span>: left top;         <span class="comment">/* 左上角 */</span></span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50px</span> <span class="number">50px</span>;        <span class="comment">/* 具体坐标 */</span></span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0%</span> <span class="number">0%</span>;            <span class="comment">/* 百分比 */</span></span><br><span class="line">  <span class="attribute">transform-origin</span>: bottom right <span class="number">50px</span>; <span class="comment">/* 3D变换的Z轴原点 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3D变换相关属性"><a href="#3D变换相关属性" class="headerlink" title="3D变换相关属性"></a>3D变换相关属性</h4><p><strong>1. perspective</strong></p><p>设置观察者与z&#x3D;0平面的距离，创建3D感：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">perspective</span>: <span class="number">1000px</span>; <span class="comment">/* 数值越小，3D效果越强烈 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 或者作为变换函数 */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">perspective</span>(<span class="number">1000px</span>) <span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. transform-style</strong></p><p>指定子元素是否在3D空间中显示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">  <span class="attribute">transform-style</span>: flat;      <span class="comment">/* 默认 - 子元素在2D平面 */</span></span><br><span class="line">  <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d; <span class="comment">/* 子元素在3D空间 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. perspective-origin</strong></p><p>定义3D透视的消失点位置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">perspective-origin</span>: <span class="number">25%</span> <span class="number">75%</span>; <span class="comment">/* 默认是 center center */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. backface-visibility</strong></p><p>定义元素背面是否可见：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">backface-visibility</span>: hidden; <span class="comment">/* 背面不可见，适合卡片翻转 */</span></span><br><span class="line">  <span class="attribute">backface-visibility</span>: visible; <span class="comment">/* 默认值 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>用于控制子元素在主轴（列）上的对齐方式</p><ul><li><strong>Flexbox</strong>：控制 flex 项目在主轴上的对齐</li><li><strong>Grid</strong>：控制网格项目在行轴上的对齐</li></ul><p><strong>属性值及含义</strong></p><table><thead><tr><th align="left">属性值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>flex-start</code></td><td align="left">项目向主轴起点对齐（默认值）</td></tr><tr><td align="left"><code>flex-end</code></td><td align="left">项目向主轴终点对齐</td></tr><tr><td align="left"><code>center</code></td><td align="left">项目在主轴上居中对齐</td></tr><tr><td align="left"><code>space-between</code></td><td align="left">项目均匀分布，首尾项目贴边</td></tr><tr><td align="left"><code>space-around</code></td><td align="left">项目均匀分布，每个项目两侧空间相等</td></tr><tr><td align="left"><code>space-evenly</code></td><td align="left">项目均匀分布，所有间距相等</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Css 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法刷题打卡</title>
      <link href="/posts/ae57c2e7.html"/>
      <url>/posts/ae57c2e7.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魔改教程</title>
      <link href="/posts/73626faf.html"/>
      <url>/posts/73626faf.html</url>
      
        <content type="html"><![CDATA[<p>我也是写上魔改教程了哈哈哈哈哈</p><h2 id="FIY3j">鼠标魔改</h2><p>我是先进入了网站 <a href="https://www.cursor.cc/">cursor.cc</a> 找了一个我喜欢的光标样式，下载好后把cur文件放到了img文件下</p><p>创建一个cursor.js文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">CURSOR</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Math</span>.<span class="property">lerp</span> = <span class="function">(<span class="params">a, b, n</span>) =&gt;</span> (<span class="number">1</span> - n) * a + n * b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getStyle</span> = (<span class="params">el, attr</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">window</span>.<span class="property">getComputedStyle</span></span><br><span class="line">            ? <span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(el)[attr]</span><br><span class="line">            : el.<span class="property">currentStyle</span>[attr];</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cursor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pos</span> = &#123; <span class="attr">curr</span>: <span class="literal">null</span>, <span class="attr">prev</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pt</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">create</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">move</span>(<span class="params">left, top</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">style</span>[<span class="string">&quot;left&quot;</span>] = <span class="string">`<span class="subst">$&#123;left&#125;</span>px`</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">style</span>[<span class="string">&quot;top&quot;</span>] = <span class="string">`<span class="subst">$&#123;top&#125;</span>px`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">create</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 确保在创建光标元素之前先应用全局鼠标样式</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>((<span class="variable language_">this</span>.<span class="property">scr</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>)));</span><br><span class="line">        <span class="comment">// 使用自定义鼠标指针文件，确保在所有状态下都应用</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scr</span>.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            * &#123; cursor: url(&#x27;/img/mouse/cursor.cur&#x27;), auto !important; &#125;</span></span><br><span class="line"><span class="string">            body &#123; cursor: url(&#x27;/img/mouse/cursor.cur&#x27;), auto !important; &#125;</span></span><br><span class="line"><span class="string">            a, button, input[type=&quot;button&quot;], input[type=&quot;submit&quot;], [role=&quot;button&quot;] &#123;</span></span><br><span class="line"><span class="string">                cursor: url(&#x27;/img/mouse/cursor.cur&#x27;), pointer !important;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            /* 确保在加载过程中也应用鼠标样式 */</span></span><br><span class="line"><span class="string">            /* 文件在这里修改 */</span></span><br><span class="line"><span class="string">            html &#123; cursor: url(&#x27;/img/mouse/cursor.cur&#x27;), auto !important; &#125;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">cursor</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cursor</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">id</span> = <span class="string">&quot;cursor&quot;</span>;</span><br><span class="line">            <span class="comment">// 移除初始 hidden 类，确保光标始终可见</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">cursor</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; el.<span class="property">length</span>; i++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">getStyle</span>(el[i], <span class="string">&quot;cursor&quot;</span>) == <span class="string">&quot;pointer&quot;</span>)</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">push</span>(el[i].<span class="property">outerHTML</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">refresh</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scr</span>.<span class="title function_">remove</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pos</span> = &#123; <span class="attr">curr</span>: <span class="literal">null</span>, <span class="attr">prev</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pt</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">create</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 简化鼠标事件处理，只关注交互状态而不是显示/隐藏</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmouseover</span> = <span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">includes</span>(e.<span class="property">target</span>.<span class="property">outerHTML</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmouseout</span> = <span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">this</span>.<span class="property">pt</span>.<span class="title function_">includes</span>(e.<span class="property">target</span>.<span class="property">outerHTML</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;hover&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123; </span><br><span class="line">            (<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span> == <span class="literal">null</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">move</span>(e.<span class="property">clientX</span> - <span class="number">8</span>, e.<span class="property">clientY</span> - <span class="number">8</span>); </span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span> = &#123; <span class="attr">x</span>: e.<span class="property">clientX</span> - <span class="number">8</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> - <span class="number">8</span> &#125;; </span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmousedown</span> = <span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">onmouseup</span> = <span class="function"><span class="params">e</span> =&gt;</span> <span class="variable language_">this</span>.<span class="property">cursor</span>.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;active&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 移除鼠标进入/离开事件的显示/隐藏逻辑，因为我们现在使用CSS确保始终可见</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span> = <span class="title class_">Math</span>.<span class="title function_">lerp</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>.<span class="property">x</span>, <span class="number">0.15</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="title function_">lerp</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>.<span class="property">y</span>, <span class="number">0.15</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">move</span>(<span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span>.<span class="property">y</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">prev</span> = <span class="variable language_">this</span>.<span class="property">pos</span>.<span class="property">curr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">requestAnimationFrame</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">render</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable constant_">CURSOR</span> = <span class="keyword">new</span> <span class="title class_">Cursor</span>();</span><br><span class="line">    <span class="comment">// 需要重新获取列表时，使用 CURSOR.refresh()</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>注意如果有加载动画的宝宝，要在加载动画的css文件里设置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/img/mouse/cursor.cur&#x27;</span>), auto <span class="meta">!important</span>;</span><br></pre></td></tr></table></figure><p>目前还有一个问题是只要点击链接的一瞬间还是会变成原来的样式，还没有解决</p>]]></content>
      
      
      
        <tags>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目前的计划</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: rgba(255, 255, 255, 0.1) !important;    backdrop-filter: blur(10px) saturate(150%);    -webkit-backdrop-filter: blur(10px) saturate(150%);    /* Safari 支持 */    border: 1px solid rgba(255, 255, 255, 0.1);    /* 细微边框增强效果 */}#page-header {    background: rgba(255, 255, 255, 0.08) !important;    backdrop-filter: blur(15px) saturate(180%);    -webkit-backdrop-filter: blur(15px) saturate(180%);    border-bottom: 1px solid rgba(255, 255, 255, 0.1);}/* 夜间模式调整 */[data-theme="dark"] #footer {    background: rgba(0, 0, 0, 0.25) !important;    border: 1px solid rgba(255, 255, 255, 0.05);}[data-theme="dark"] #page-header {    background: rgba(0, 0, 0, 0.2) !important;    border-bottom: 1px solid rgba(255, 255, 255, 0.05);}/* 遮罩透明 */#footer::before,#page-header::before,[data-theme="dark"] #footer::before,[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 一级菜单居中 */#nav .menus_items {    position: absolute !important;    width: fit-content !important;    left: 50% !important;    transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 ，取决于实际的菜单*/.menus_items .menus_item:nth-child(5) .menus_item_child {    left: -38px;}/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {    animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {    animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {    animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {    animation: light_5px 10s linear infinite;}/* 关键帧描述 *//*黑夜霓虹灯*/@keyframes light_15px {    0% {        text-shadow: #5636ed 0 0 15px;    }    12.5% {        text-shadow: #11ee5e 0 0 15px;    }    25% {        text-shadow: #f14747 0 0 15px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 15px;    }    50% {        text-shadow: #b347f1 0 0 15px;    }    62.5% {        text-shadow: #002afa 0 0 15px;    }    75% {        text-shadow: #ed709b 0 0 15px;    }    87.5% {        text-shadow: #39c5bb 0 0 15px;    }    100% {        text-shadow: #5636ed 0 0 15px;    }}@keyframes light_10px {    0% {        text-shadow: #5636ed 0 0 10px;    }    12.5% {        text-shadow: #11ee5e 0 0 10px;    }    25% {        text-shadow: #f14747 0 0 10px;    }    37.5% {        text-shadow: #f1a247 0 0 10px;    }    50% {        text-shadow: #f1ee47 0 0 10px;    }    50% {        text-shadow: #b347f1 0 0 10px;    }    62.5% {        text-shadow: #002afa 0 0 10px;    }    75% {        text-shadow: #ed709b 0 0 10px;    }    87.5% {        text-shadow: #39c5bb 0 0 10px;    }    100% {        text-shadow: #5636ed 0 0 10px;    }}@keyframes light_5px {    0% {        text-shadow: #5636ed 0 0 5px;    }    12.5% {        text-shadow: #11ee5e 0 0 5px;    }    25% {        text-shadow: #f14747 0 0 5px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 5px;    }    50% {        text-shadow: #b347f1 0 0 5px;    }    62.5% {        text-shadow: #002afa 0 0 5px;    }    75% {        text-shadow: #ed709b 0 0 5px;    }    87.5% {        text-shadow: #39c5bb 0 0 5px;    }    100% {        text-shadow: #5636ed 0 0 5px;    }}/*个人卡片渐变*//* 侧边栏个人信息卡片动态渐变色 */#aside-content>.card-widget.card-info {    background: url('/img/avabg/bg1.jpg') center/cover no-repeat;    box-shadow: 0 6px 20px rgba(164, 69, 255, 0.22), 0 0 14px rgba(236, 72, 153, 0.18);    position: relative;    overflow: hidden;}@-webkit-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@-moz-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}/* 全局背景 - 根据主题模式显示不同图片 */#web_bg {    background: url('/img/beautiful.jpg') center/cover no-repeat fixed !important;}/* 暗色模式下显示不同的背景图片 */[data-theme="dark"] #web_bg {    background: url('/img/ku.jpg') center/cover no-repeat fixed !important;    filter: brightness(3.0);    /* 进一步增加亮度 */}/* 黑夜模式适配 - 使用不同的背景图片 */[data-theme="dark"] #aside-content>.card-widget.card-info {    background: url('/img/avabg/bg2.jpg') center/cover no-repeat;    box-shadow: 0 6px 22px rgba(155, 93, 229, 0.25), 0 0 14px rgba(236, 72, 153, 0.2);    filter: brightness(0.8) contrast(1.1);}/* * 主题：星空（偏夜空紫，带一点蓝的清冷霓虹） * 使用方式：在 <body> 上添加类名 theme-starry * 作用范围：仅覆盖侧边栏个人信息卡片的背景与投影 */body.theme-starry #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #1b1236,            #3a1f6e,            #5624b8,            #6d28d9,            #2b6cb0);    box-shadow: 0 8px 26px rgba(109, 40, 217, 0.28), 0 0 18px rgba(59, 130, 246, 0.22);}/* 暗色模式下的星空主题卡片样式（与上面同风格、亮度稍降） */[data-theme="dark"] body.theme-starry #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #100a22,            #2a1754,            #4c1d95,            #6d28d9);    box-shadow: 0 10px 30px rgba(109, 40, 217, 0.35), 0 0 20px rgba(59, 130, 246, 0.25);}/* * 主题：伟大（高对比、仪式感，紫金微辉） * 使用方式：在 <body> 上添加类名 theme-epic */body.theme-epic #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #2a0e61,            #6a1b9a,            #8b5cf6,            #c084fc);    box-shadow: 0 10px 28px rgba(139, 92, 246, 0.26), 0 0 18px rgba(234, 179, 8, 0.18);    border: 1px solid rgba(234, 179, 8, 0.25);}/* 暗色模式下的“伟大”主题卡片样式 */[data-theme="dark"] body.theme-epic #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #1d0a46,            #4c1480,            #7c3aed,            #a78bfa);    box-shadow: 0 12px 32px rgba(124, 58, 237, 0.3), 0 0 22px rgba(234, 179, 8, 0.22);}/* * 主题：紫色（都市轻霓虹，通用耐看） * 使用方式：在 <body> 上添加类名 theme-purple */body.theme-purple #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #ad8bff,            #c3a7ff,            #e2b6ff,            #f1d0ff);    box-shadow: 0 8px 24px rgba(164, 69, 255, 0.22), 0 0 16px rgba(236, 72, 153, 0.18);}/* 暗色模式下的“紫色”主题卡片样式 */[data-theme="dark"] body.theme-purple #aside-content>.card-widget.card-info {    background: linear-gradient(135deg,            #4f2bb5,            #6a3ee0,            #8b5cf6,            #a78bfa);    box-shadow: 0 10px 26px rgba(139, 92, 246, 0.26), 0 0 18px rgba(236, 72, 153, 0.2);}/* * 右下角设置与返回顶部图标：星空蓝悬停效果 * 目标元素：#rightside 区域内的“设置按钮”和“返回顶部” * 效果：图标变为星空蓝并带霓虹辉光，背景/边框轻微高亮 */#rightside #rightside-config:hover i,#rightside #go-up:hover i {    color: #60a5fa;    /* 星光蓝 */    text-shadow: 0 0 8px rgba(96, 165, 250, 0.9), 0 0 16px rgba(59, 130, 246, 0.6);}#rightside #rightside-config:hover,#rightside #go-up:hover {    background: rgba(59, 130, 246, 0.12);    border-color: rgba(59, 130, 246, 0.35);}[data-theme="dark"] #rightside #rightside-config:hover i,[data-theme="dark"] #rightside #go-up:hover i {    color: #93c5fd;    /* 暗色模式稍亮的星空蓝 */    text-shadow: 0 0 10px rgba(147, 197, 253, 0.95), 0 0 18px rgba(59, 130, 246, 0.7);}[data-theme="dark"] #rightside #rightside-config:hover,[data-theme="dark"] #rightside #go-up:hover {    background: rgba(37, 99, 235, 0.16);    border-color: rgba(59, 130, 246, 0.45);}/* * 右下角设置面板：夜间模式、繁简转换、单/双栏切换 悬停为荧光绿 * 目标元素：#darkmode、#translateLink、#hide-aside-btn * 效果：图标/文字荧光绿色，伴随霓虹辉光；按钮背景/边框轻微高亮 */#rightside #rightside-config-hide #darkmode:hover i,#rightside #rightside-config-hide #hide-aside-btn:hover i {    color: #39ff14;    /* 荧光绿 */    text-shadow: 0 0 10px rgba(57, 255, 20, 0.95), 0 0 18px rgba(57, 255, 20, 0.6);}#rightside #rightside-config-hide #translateLink:hover {    color: #39ff14;    text-shadow: 0 0 10px rgba(57, 255, 20, 0.95), 0 0 18px rgba(57, 255, 20, 0.6);}#rightside #rightside-config-hide #darkmode:hover,#rightside #rightside-config-hide #translateLink:hover,#rightside #rightside-config-hide #hide-aside-btn:hover {    background: rgba(57, 255, 20, 0.12);    border-color: rgba(57, 255, 20, 0.35);}[data-theme="dark"] #rightside #rightside-config-hide #darkmode:hover i,[data-theme="dark"] #rightside #rightside-config-hide #hide-aside-btn:hover i {    color: #72ff4d;    /* 暗色模式稍亮 */    text-shadow: 0 0 12px rgba(114, 255, 77, 0.95), 0 0 20px rgba(57, 255, 20, 0.7);}[data-theme="dark"] #rightside #rightside-config-hide #translateLink:hover {    color: #72ff4d;    text-shadow: 0 0 12px rgba(114, 255, 77, 0.95), 0 0 20px rgba(57, 255, 20, 0.7);}[data-theme="dark"] #rightside #rightside-config-hide #darkmode:hover,[data-theme="dark"] #rightside #rightside-config-hide #translateLink:hover,[data-theme="dark"] #rightside #rightside-config-hide #hide-aside-btn:hover {    background: rgba(22, 163, 74, 0.18);    border-color: rgba(57, 255, 20, 0.45);}/* * 顶部提示条（Snackbar）：固定顶部居中显示，并按明暗模式切换配色 * 明亮模式：炫酷紫色渐变 + 柔和辉光 * 暗黑模式：星空蓝渐变 + 荧光辉光 */.snackbar-container.snackbar-css {    top: 10px !important;    bottom: auto !important;}/* 白天（light）：炫酷紫色并带辉光 */html[data-theme="light"] .snackbar-container.snackbar-css {    background: linear-gradient(135deg, #ad8bff, #caa1ff) !important;    box-shadow: 0 8px 24px rgba(164, 69, 255, 0.28), 0 0 16px rgba(236, 72, 153, 0.22) !important;}/* 夜间（dark）：星空蓝并带荧光辉光 */html[data-theme="dark"] .snackbar-container.snackbar-css {    background: linear-gradient(135deg, #0b1533, #1b2a4a, #2a4b8d) !important;    box-shadow: 0 10px 28px rgba(59, 130, 246, 0.28), 0 0 18px rgba(147, 197, 253, 0.22) !important;}.snackbar-container.snackbar-css .action,.snackbar-container.snackbar-css .snackbar-content {    color: #ffffff !important;}/* 滚动条紫色主题 */::-webkit-scrollbar {    width: 8px;    height: 8px;}::-webkit-scrollbar-track {    background: rgba(173, 139, 255, 0.1);    border-radius: 4px;}::-webkit-scrollbar-thumb {    background: linear-gradient(135deg, #ad8bff, #caa1ff);    border-radius: 4px;    box-shadow: 0 0 6px rgba(164, 69, 255, 0.3);}::-webkit-scrollbar-thumb:hover {    background: linear-gradient(135deg, #9b5de5, #b36af0);    box-shadow: 0 0 8px rgba(164, 69, 255, 0.5);}/* 暗色模式滚动条 */[data-theme="dark"] ::-webkit-scrollbar-track {    background: rgba(59, 130, 246, 0.1);}[data-theme="dark"] ::-webkit-scrollbar-thumb {    background: linear-gradient(135deg, #6a3ee0, #8b5cf6);    box-shadow: 0 0 6px rgba(109, 40, 217, 0.4);}[data-theme="dark"] ::-webkit-scrollbar-thumb:hover {    background: linear-gradient(135deg, #7c3aed, #a78bfa);    box-shadow: 0 0 8px rgba(109, 40, 217, 0.6);}/* 个人信息Follow me按钮 */#aside-content>.card-widget.card-info>#card-info-btn {    border-radius: 8px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"heyvsheng","short_name":"heyvsheng","theme_color":"#B041FF","background_color":"#B041FF","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/loading.css"/>
      <url>/css/loading.css</url>
      
        <content type="html"><![CDATA[/* 自定义加载页面样式 *//* 确保在加载过程中也应用自定义鼠标样式 */body.loading {    cursor: url('/img/mouse/cursor.cur'), auto !important;}#loading-box {    position: fixed;    inset: 0;    z-index: 9999;    /* 保持在最上层加载遮罩 */    background: url('/img/beautiful.jpg') center/cover no-repeat;    cursor: url('/img/mouse/cursor.cur'), auto !important;}/* 夜间模式背景覆盖（优先） */body[data-theme="dark"] #loading-box {    background: url('/img/ku.jpg') center/cover no-repeat;}#loading-box .image-loader .avatar {    position: relative;    z-index: 2;    /* 确保头像在overlay之上 */    width: 180px;    height: 180px;    background-size: cover;    background-position: center;    box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    animation: pulse 2s ease-in-out infinite;}#loading-box .image-loader .overlay {    position: absolute;    inset: -30px;    background: rgba(0, 0, 0, 0.15);    /* 更低不透明度，避免完全遮挡背景 */    filter: blur(8px);    mix-blend-mode: overlay;    z-index: 1;}#loading-box .image-loader .loading-text {    color: #ffffff;    text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);    font-size: 16px;    font-weight: bold;}/* 自定义脉冲动画 */@keyframes pulse {    0% {        transform: scale(1);        box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    }    50% {        transform: scale(1.05);        box-shadow: 0 12px 50px rgba(109, 40, 217, 0.4), 0 0 30px rgba(59, 130, 246, 0.4);    }    100% {        transform: scale(1);        box-shadow: 0 8px 40px rgba(109, 40, 217, 0.3), 0 0 20px rgba(59, 130, 246, 0.3);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe {    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/info-card.css"/>
      <url>/css/info-card.css</url>
      
        <content type="html"><![CDATA[/* 增强个人信息卡片文字可读性 */#aside-content .card-info {    position: relative;}#aside-content .card-info::before {    content: '';    position: absolute;    top: 0;    left: 0;    right: 0;    bottom: 0;    background: rgba(0, 0, 0, 0.3);    backdrop-filter: blur(1px);    border-radius: 12px;    z-index: 0;}#aside-content .card-info>* {    position: relative;    z-index: 1;}#aside-content .card-info .author-info-name {    color: #fff;    font-weight: bold;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info .author-info-description {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info .site-data .headline,#aside-content .card-info .site-data .length-num {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);}#aside-content .card-info #card-info-btn {    color: #fff;    background-color: rgba(0, 0, 0, 0.5);    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);    backdrop-filter: blur(8px);    border: 1px solid rgba(255, 255, 255, 0.2);    transition: all 0.3s ease;}#aside-content .card-info #card-info-btn:hover {    background-color: rgba(0, 0, 0, 0.7);    border-color: rgba(255, 255, 255, 0.3);    transform: translateY(-2px);}#aside-content .card-info .card-info-social-icons .social-icon {    color: #fff;    text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);    transition: all 0.3s ease;}#aside-content .card-info .card-info-social-icons .social-icon:hover {    color: #fff;    transform: scale(1.2);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;// 定义自定义光标样式路径const CURSOR_PATH = '/img/mouse/cursor.cur';let cursorStyleElement = null;// 初始化并立即应用全局自定义光标样式function initGlobalCursorStyles() {    // 移除任何已存在的光标样式表    removeCursorStyleElement();    // 创建一个新的样式元素，设置最高优先级    cursorStyleElement = document.createElement('style');    cursorStyleElement.id = 'global-cursor-style';    cursorStyleElement.setAttribute('data-cursor-override', 'true');    // 使用最强大的CSS选择器和最高优先级设置    cursorStyleElement.innerHTML = `        /* 全局覆盖 - 应用于所有元素和状态 */        *,        *:before,        *:after,        *:link,        *:visited,        *:hover,        *:active,        *:focus,        *:focus-within,        body,        body *,        html,        html * {            cursor: url('${CURSOR_PATH}'), auto !important;            cursor: url('${CURSOR_PATH}'), pointer !important;                        /* Webkit内核浏览器兼容 */            -webkit-cursor: url('${CURSOR_PATH}'), auto !important;            -webkit-cursor: url('${CURSOR_PATH}'), pointer !important;                        /* 防止点击时显示默认光标 */            -webkit-user-select: none !important;            -moz-user-select: none !important;            -ms-user-select: none !important;            user-select: none !important;        }                /* 特别强调 - 确保在所有状态下链接都使用自定义光标 */        a,        a:link,        a:visited,        a:hover,        a:active,        a:focus,        a:focus-within {            cursor: url('${CURSOR_PATH}'), pointer !important;            cursor: url('${CURSOR_PATH}'), auto !important;            -webkit-cursor: url('${CURSOR_PATH}'), pointer !important;        }                /* 确保表单元素也使用自定义光标 */        input,        input[type="text"],        input[type="password"],        input[type="email"],        input[type="search"],        input[type="number"],        input[type="tel"],        input[type="url"],        input[type="button"],        input[type="submit"],        input[type="reset"],        input[type="checkbox"],        input[type="radio"],        select,        textarea,        button,        [role="button"],        [onclick],        [onmousedown],        [onmouseup] {            cursor: url('${CURSOR_PATH}'), pointer !important;            cursor: url('${CURSOR_PATH}'), auto !important;            -webkit-cursor: url('${CURSOR_PATH}'), pointer !important;        }                /* 确保在加载过程中也应用自定义鼠标样式 */        body.loading,        html.loading,        #loading-box,        #loading-box * {            cursor: url('${CURSOR_PATH}'), auto !important;            cursor: url('${CURSOR_PATH}'), pointer !important;            -webkit-cursor: url('${CURSOR_PATH}'), auto !important;        }                /* 确保在选择文本时也应用自定义鼠标样式 */        ::selection,        ::-moz-selection,        ::-webkit-selection {            cursor: url('${CURSOR_PATH}'), auto !important;        }    `;    // 将样式表添加到head的最前面，确保最高优先级    if (document.head) {        if (document.head.firstChild) {            document.head.insertBefore(cursorStyleElement, document.head.firstChild);        } else {            document.head.appendChild(cursorStyleElement);        }    } else {        // 处理极端情况，document.head不存在时        document.addEventListener('DOMContentLoaded', function () {            if (document.head.firstChild) {                document.head.insertBefore(cursorStyleElement, document.head.firstChild);            } else {                document.head.appendChild(cursorStyleElement);            }        });    }}// 移除光标样式元素function removeCursorStyleElement() {    if (cursorStyleElement) {        cursorStyleElement.remove();        cursorStyleElement = null;    }    // 同时移除任何可能存在的旧样式表    const existingStyles = document.querySelectorAll('style[data-cursor-override="true"]');    existingStyles.forEach(style => style.remove());}// 拦截所有链接点击，确保自定义光标在跳转过程中可见function setupLinkClickInterceptor() {    // 使用捕获模式监听所有点击事件    document.addEventListener('mousedown', function (e) {        // 强制重新应用样式        forceApplyCursorStyles();        // 特别处理链接点击        if (e.target.tagName === 'A' || e.target.closest('a')) {            const linkElement = e.target.tagName === 'A' ? e.target : e.target.closest('a');            const href = linkElement.getAttribute('href');            // 仅拦截有效的页面跳转链接            if (href && href !== '#' && !href.startsWith('javascript:') && !href.startsWith('#') && !linkElement.target) {                // 阻止默认跳转行为                e.preventDefault();                // 创建一个临时的全屏覆盖层，确保在跳转期间鼠标样式保持                createTransitionOverlay();                // 稍微延迟后执行跳转，确保样式应用                setTimeout(() => {                    window.location.href = href;                }, 50);            }        }    }, true);}// 创建一个临时的全屏覆盖层，确保在跳转期间鼠标样式保持function createTransitionOverlay() {    // 移除任何已存在的覆盖层    const existingOverlay = document.getElementById('cursor-transition-overlay');    if (existingOverlay) {        existingOverlay.remove();    }    // 创建新的覆盖层    const overlay = document.createElement('div');    overlay.id = 'cursor-transition-overlay';    overlay.style.cssText = `        position: fixed;        top: 0;        left: 0;        width: 100%;        height: 100%;        z-index: 999999;        pointer-events: none;        opacity: 0;    `;    document.body.appendChild(overlay);}// 强制应用光标样式，用于关键事件和状态变化时function forceApplyCursorStyles() {    removeCursorStyleElement();    initGlobalCursorStyles();    // 确保body和html元素立即应用样式    if (document.body) {        document.body.style.cursor = `url('${CURSOR_PATH}'), auto !important`;        document.body.style.cursor = `url('${CURSOR_PATH}'), pointer !important`;    }    if (document.documentElement) {        document.documentElement.style.cursor = `url('${CURSOR_PATH}'), auto !important`;        document.documentElement.style.cursor = `url('${CURSOR_PATH}'), pointer !important`;    }}// 添加全局事件监听，在各种情况下都强制应用自定义样式function setupGlobalEventListeners() {    const events = [        'mousedown', 'mouseup', 'mousemove', 'click',        'mouseenter', 'mouseleave', 'focus', 'blur',        'keydown', 'keyup', 'scroll', 'resize',        'touchstart', 'touchend', 'touchmove'    ];    events.forEach(event => {        document.addEventListener(event, forceApplyCursorStyles, true);    });    // 监听页面加载状态变化    window.addEventListener('load', forceApplyCursorStyles);    window.addEventListener('beforeunload', forceApplyCursorStyles);    // 监听DOM内容变化，确保动态添加的元素也应用样式    const observer = new MutationObserver(forceApplyCursorStyles);    observer.observe(document.body, {        childList: true,        subtree: true,        attributes: true,        characterData: true    });}// 定期检查并强制应用样式（作为最后的保障）function setupPeriodicStyleCheck() {    setInterval(() => {        forceApplyCursorStyles();    }, 500); // 每500毫秒检查一次}// 主初始化函数(function initCustomCursor() {    // 优先应用CSS变量（如果需要）    const styleVars = document.createElement('style');    styleVars.innerHTML = `        :root {            --custom-cursor: url('${CURSOR_PATH}'), auto;            --custom-cursor-pointer: url('${CURSOR_PATH}'), pointer;        }    `;    document.head.appendChild(styleVars);    // 立即应用全局样式    initGlobalCursorStyles();    // 拦截链接点击    setupLinkClickInterceptor();    // 设置全局事件监听    setupGlobalEventListeners();    // 设置定期检查    setupPeriodicStyleCheck();    // 确保在DOM加载完成后再次应用样式    if (document.readyState === 'loading') {        document.addEventListener('DOMContentLoaded', function () {            forceApplyCursorStyles();        });    }})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/loading.js"/>
      <url>/js/loading.js</url>
      
        <content type="html"><![CDATA[/** * 加载动画气泡特效 */// 等待DOM加载完成document.addEventListener('DOMContentLoaded', function() {  // 获取加载框元素  const loadingBox = document.getElementById('loading-box');    // 如果加载框存在，则创建气泡容器  if (loadingBox) {    // 检查是否已存在气泡容器    let bubblesContainer = document.querySelector('.bubbles-container');        // 如果气泡容器不存在，则创建一个    if (!bubblesContainer) {      bubblesContainer = document.createElement('div');      bubblesContainer.classList.add('bubbles-container');      loadingBox.appendChild(bubblesContainer);    }        // 初始化气泡生成    initBubbles(bubblesContainer);  }});/** * 初始化气泡生成 * @param {HTMLElement} container 气泡容器元素 */function initBubbles(container) {  // 气泡大小类型  const bubbleSizes = ['small', 'medium', 'large'];  // 要生成的气泡数量  const bubbleCount = 20;    // 生成初始气泡  for (let i = 0; i < bubbleCount; i++) {    createBubble(container, bubbleSizes);  }    // 每隔一段时间生成新的气泡  setInterval(() => {    createBubble(container, bubbleSizes);  }, 500);}/** * 创建一个气泡 * @param {HTMLElement} container 气泡容器元素 * @param {Array} sizes 气泡大小类型数组 */function createBubble(container, sizes) {  // 创建气泡元素  const bubble = document.createElement('div');  bubble.classList.add('bubble');    // 随机选择气泡大小  const size = sizes[Math.floor(Math.random() * sizes.length)];  bubble.classList.add(size);    // 随机设置气泡的水平位置  const leftPos = Math.random() * 100;  bubble.style.left = `${leftPos}%`;    // 随机设置气泡的透明度  const opacity = 0.2 + Math.random() * 0.5;  bubble.style.background = `rgba(255, 255, 255, ${opacity})`;    // 随机设置气泡的动画持续时间（小气泡快，大气泡慢）  let duration;  switch (size) {    case 'small':      duration = 5 + Math.random() * 5;      break;    case 'medium':      duration = 8 + Math.random() * 7;      break;    case 'large':      duration = 12 + Math.random() * 10;      break;  }  bubble.style.animationDuration = `${duration}s`;    // 随机设置动画延迟  const delay = Math.random() * 5;  bubble.style.animationDelay = `${delay}s`;    // 添加气泡到容器  container.appendChild(bubble);    // 当气泡动画结束后，移除气泡元素  bubble.addEventListener('animationend', function() {    if (container.contains(bubble)) {      container.removeChild(bubble);    }  });}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[// 宇宙星空背景效果class Universe {  constructor() {    this.canvas = null;    this.ctx = null;    this.stars = [];    this.count = 200;    this.width = 0;    this.height = 0;  }  init() {    // 创建canvas元素    const existingCanvas = document.getElementById('universe');    if (existingCanvas) {      document.body.removeChild(existingCanvas);    }        this.canvas = document.createElement('canvas');    this.canvas.id = 'universe';    document.body.appendChild(this.canvas);    this.ctx = this.canvas.getContext('2d');        // 设置canvas尺寸    this.resize();    window.addEventListener('resize', () => this.resize());        // 创建星星    this.createStars();        // 动画循环    this.animate();        // 监听主题切换    this.listenThemeChange();  }  resize() {    this.width = window.innerWidth;    this.height = window.innerHeight;    this.canvas.width = this.width;    this.canvas.height = this.height;  }  createStars() {    this.stars = [];    for (let i = 0; i < this.count; i++) {      this.stars.push({        x: Math.random() * this.width,        y: Math.random() * this.height,        radius: Math.random() * 1.5,        color: this.getStarColor(),        speed: Math.random() * 0.5 + 0.1      });    }  }  getStarColor() {    // 根据当前主题模式选择星星颜色    const isDark = document.documentElement.getAttribute('data-theme') === 'dark';        if (isDark) {      // 暗色模式下使用明亮的星星色      const colors = ['#ffffff', '#f8f9fa', '#e9ecef', '#dee2e6'];      return colors[Math.floor(Math.random() * colors.length)];    } else {      // 亮色模式下使用柔和的星星色      const colors = ['#495057', '#6c757d', '#adb5bd', '#ced4da'];      return colors[Math.floor(Math.random() * colors.length)];    }  }  drawStars() {    this.ctx.clearRect(0, 0, this.width, this.height);        this.stars.forEach(star => {      this.ctx.beginPath();      this.ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);      this.ctx.fillStyle = star.color;      this.ctx.fill();            // 星星移动      star.y -= star.speed;      if (star.y < 0) {        star.y = this.height;        star.x = Math.random() * this.width;      }    });  }  animate() {    this.drawStars();    requestAnimationFrame(() => this.animate());  }  listenThemeChange() {    // 监听主题变化事件    const observer = new MutationObserver((mutations) => {      mutations.forEach((mutation) => {        if (mutation.attributeName === 'data-theme') {          // 主题切换时更新星星颜色          this.updateStarsColor();        }      });    });        observer.observe(document.documentElement, {      attributes: true    });  }  updateStarsColor() {    this.stars.forEach(star => {      star.color = this.getStarColor();    });  }}// 初始化宇宙背景function initUniverse() {  const universe = new Universe();  universe.init();}// 在DOM加载完成后初始化if (document.readyState === 'loading') {  document.addEventListener('DOMContentLoaded', initUniverse);} else {  initUniverse();}// 导出供其他模块使用export { Universe, initUniverse };]]></content>
      
    </entry>
    
    
  
</search>
